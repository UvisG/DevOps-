---
- hosts: 'masters, workers'
  remote_user: uvis
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
  #   - name: uninstall docker and containerd
  #     become: yes
  #     shell: |
  #             sudo systemctl stop docker.socket
  #             sudo apt-get purge -y docker-engine docker docker.io docker-ce docker-ce-cli docker-compose-plugin
  #             sudo apt-get autoremove -y --purge docker-engine docker docker.io docker-ce docker-compose-plugin
  #             sudo rm -rf /var/lib/docker /etc/docker
  #             sudo rm /etc/apparmor.d/docker
  #             sudo groupdel docker
  #             sudo rm -rf /var/run/docker.sock
  #             sudo systemctl stop containerd.service
  #             sudo apt purge containerd.io -y

     - name: disable swap
       shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
               systemctl mask swap.target
     
     - name: Create the .conf file to load the modules at bootup
       file:
         path: "/etc/modules-load.d/k8s.conf"
         state: "touch"
     
     - name: Add conf for containerd
       blockinfile:
         path: "/etc/modules-load.d/k8s.conf"
         block: |
               overlay
               br_netfilter

     - name: modprobe
       shell: |
               sudo modprobe overlay
               sudo modprobe br_netfilter
     
     - name: Set system configurations for Kubernetes networking
       file:
         path: "/etc/sysctl.d/k8s.conf"
         state: "touch"

     - name: Set up required sysctl params, these persist across reboots.
       blockinfile:
         path: "/etc/sysctl.d/k8s.conf"
         block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1
     
     - name: Apply new settings
       command: sudo sysctl --system

     - name: Install CRI-O
       shell: |
               OS=xUbuntu_20.04
               VERSION=1.23
               echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" | \
               sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
               curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | \
               sudo apt-key add - 
               echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" | \
               sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list
               curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | \
               sudo apt-key add -
               sudo apt update
               sudo apt install cri-o cri-o-runc cri-tools -y
               sudo systemctl enable crio.service
               sudo systemctl start crio.service
     
     - name: Add K8s Source and Public key
       shell: |
               sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
               echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    
     - name: Install kubernetes
       shell: |
               sudo apt-get update
               sudo apt-get install -y kubelet=1.25.5-00 kubeadm=1.25.5-00 kubectl=1.25.5-00
               sudo apt-mark hold kubelet kubeadm kubectl
                # source <(kubectl completion bash)
                # echo "source <(kubectl completion bash)" >> ~/.bashrc

               